package com.verimatrix.omi;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.13
 * 2014-11-20T18:42:57.962+09:00
 * Generated source version: 2.7.13
 * 
 */
@WebServiceClient(name = "DomainMgmtService", 
                  wsdlLocation = "classpath:com/verimatrix/omi/wsdl/OMI.wsdl",
                  targetNamespace = "http://www.verimatrix.com/omi") 
public class DomainMgmtService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.verimatrix.com/omi", "DomainMgmtService");
    public final static QName DomainMgmt = new QName("http://www.verimatrix.com/omi", "DomainMgmt");
    static {
    	URL url = DomainMgmtService.class.getClassLoader().getResource("com/verimatrix/omi/wsdl/OMI.wsdl");
        if (url == null) {
          java.util.logging.Logger.getLogger(DomainMgmtService.class.getName())
              .log(java.util.logging.Level.INFO,
                   "Can not initialize the default wsdl from {0}", "classpath:com/verimatrix/omi/wsdl/OMI.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public DomainMgmtService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public DomainMgmtService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DomainMgmtService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public DomainMgmtService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public DomainMgmtService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public DomainMgmtService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns DomainMgmt
     */
    @WebEndpoint(name = "DomainMgmt")
    public DomainMgmt getDomainMgmt() {
        return super.getPort(DomainMgmt, DomainMgmt.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DomainMgmt
     */
    @WebEndpoint(name = "DomainMgmt")
    public DomainMgmt getDomainMgmt(WebServiceFeature... features) {
        return super.getPort(DomainMgmt, DomainMgmt.class, features);
    }

}
